import sys
import math
input = sys.stdin.readline

def find_parent(parent, x):
    if parent[x]!=x:
        parent[x] = find_parent(parent, parent[x])
    return parent[x]
    
def union_parent(parent, a, b):
    a = find_parent(parent, a)
    b = find_parent(parent, b)
    
    if a<b:
        parent[b] = a
    else:
        parent[a] = b
        
n = int(input())

stars = []
parent = [0]*(n+1)

for i in range(1, n+1):
    parent[i] = i

for _ in range(n):
    x, y = map(float, input().split())
    stars.append((x, y))

edges = []

for i in range(n):
    for j in range(i+1, n):
        cost = math.sqrt((stars[i][0] - stars[j][0]) ** 2 + (stars[i][1] - stars[j][1]) ** 2)
        edges.append((cost,i,j))
        
edges.sort()
result = 0

for i in edges:
    c, x, y = i
    if find_parent(parent,x)!=find_parent(parent,y):
        union_parent(parent, x, y)
        result+=c
        
print("{:.2f}".format(result))
