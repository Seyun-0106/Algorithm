import sys
input = sys.stdin.readline
import heapq

def dijktra(v):
    global result
    
    q = []
    heapq.heappush(q, (0, v))
    distance = [INF]*(n+1)
    distance[v] = 0
    
    while q:
        dist, now = heapq.heappop(q)
        
        if distance[now]<dist:
            continue
        
        for i in graph[now]:
            cost = dist + i[0]
            if distance[i[1]]>cost:
                distance[i[1]] = cost
                heapq.heappush(q, (cost, i[1]))
    
    total = 0
    for i in range(1, n+1):
        if distance[i] <= m:
            total += items[i]
    result = max(result, total)
    
INF = int(1e9)
n,m,r = map(int,input().split())
items = [-1] + list(map(int,input().split()))

graph = [[] for _ in range(n+1)]

for i in range(r):
    a,b,l = map(int,input().split())
    graph[a].append((l, b))
    graph[b].append((l, a))

result = 0
for i in range(1, n+1):
    dijktra(i)
print(result)
