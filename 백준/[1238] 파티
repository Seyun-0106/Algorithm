import sys
input = sys.stdin.readline
import heapq

INF = int(1e9)
n, m, x = map(int, input().split())
# n: 학생, m: 도로, x: 도착지

graph = [[] for _ in range(n+1)]

for _ in range(m):
    a, b, c = map(int, input().split())
    graph[a].append((b,c))

def dijkstra(start, target):
    q = []
    heapq.heappush(q, (0, start))
    distance = [INF]*(n+1)
    distance[start] = 0
    
    while q:
        dist, now = heapq.heappop(q)
        
        if now == target:
            return distance[target]
        
        if distance[now]<dist:
            continue
        
        for i in graph[now]:
            cost = dist+i[1]
            if distance[i[0]]>cost:
                distance[i[0]] = cost
                heapq.heappush(q, (cost, i[0]))

max_distance = 0
for i in range(1, n+1):
    max_distance = max(max_distance, dijkstra(i,x)+dijkstra(x,i))
    
print(max_distance)
