import sys
input = sys.stdin.readline
from collections import deque
sys.setrecursionlimit(100000)

def bfs(x, y, h):
    q = deque()
    q.append((x,y))
    visited[x][y] = True
    
    while q:
        x, y = q.popleft()
        dx = [-1, 1, 0, 0]
        dy = [0, 0, -1, 1]
        
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            
            if 0<=nx<n and 0<=ny<n:
                if not visited[nx][ny] and areas[nx][ny]>h:
                    q.append((nx,ny))
                    visited[nx][ny] = True
                
n = int(input())
areas = []


for i in range(n):
    areas.append(list(map(int, input().split())))


max_height = 0
for i in areas:
    max_height = max(max_height, max(i))
    
cnt = 0
cnt2 = 0
for h in range(max_height):
    visited = [[False]*n for _ in range(n)]
    cnt2 = 0
    for i in range(n):
        for j in range(n):
            if not visited[i][j] and areas[i][j]>h:
                bfs(i, j, h)
                cnt2+=1
    cnt = max(cnt, cnt2)
    
print(cnt)
