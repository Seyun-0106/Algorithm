import heapq
import sys
input = sys.stdin.readline

INF = int(1e9)
n = int(input())    # 도시의 개수
m = int(input())    # 버스의 개수

graph = [[] for _ in range(n+1)]
distance = [INF]*(n+1)

for _ in range(m):
    a, b, c = map(int, input().split())
    # a: 출발 도시 번호, b: 도착지 도시 번호, c: 버스 비용
    graph[a].append((b,c))

def dijkstra(start):
    q = []
    heapq.heappush(q, (0, start))
    distance[start] = 0
    while q:
        dist, now = heapq.heappop(q)
        if distance[now]<dist:
            continue
        for i in graph[now]:
            cost = dist + i[1]
            if distance[i[0]]>cost:
                distance[i[0]] = cost
                heapq.heappush(q, (cost, i[0]))

x, y = map(int, input().split())

dijkstra(x)
print(distance[y])
