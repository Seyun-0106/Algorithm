from collections import deque

N,M,V = map(int, input().split())
graph = [[0]*(N+1) for _ in range(N+1)] #인접행렬

def dfs(v):
  visited[v] = True
  print(v, end=" ")
  for i in range(1, N+1):
    if not visited[i] and graph[v][i]==1:
      dfs(i)
  
def bfs(v):
  queue = deque()
  queue.append(v)
  visited[v] = True
  
  while queue:
    v = queue.popleft()
    print(v, end=" ")
    for i in range(1, N+1):
      if not visited[i] and graph[v][i]==1:
        queue.append(i)
        visited[i]=True


for i in range(M):
  x,y = map(int, input().split())
  graph[x][y] = graph[y][x] =  1 #양뱡향

visited = [False]*(N+1)
dfs(V)
print()
visited = [False]*(N+1)
bfs(V)
