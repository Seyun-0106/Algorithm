import sys
input = sys.stdin.readline
from collections import deque
sys.setrecursionlimit(10000)

def bfs(island, x, y):
    dx = [-1, 1, 0, 0, -1, -1, 1, 1]
    dy = [0, 0, -1, 1, -1, 1, -1, 1]
    
    queue = deque()
    queue.append((x,y))
    visited[x][y] = 1
    
    while queue:
        v = queue.popleft()
        x = v[0]
        y = v[1]
        
        for i in range(8):
            nx = x + dx[i]
            ny = y + dy[i]
            
            if 0<=nx<h and 0<=ny<w:
                if visited[nx][ny]==0 and island[nx][ny]==1:
                    queue.append((nx, ny))
                    visited[nx][ny] = 1

while True:
    w, h = map(int, input().split())
    
    if w==0 and h==0:
        break
    
    visited = [[0]*w for _ in range(h)]
    
    island = []
    for i in range(h):
        island.append(list(map(int, input().split())))
        
    cnt = 0
    for i in range(h):
        for j in range(w):
            if visited[i][j]==0 and island[i][j]==1:
                bfs(island, i, j)
                cnt += 1
    print(cnt)
