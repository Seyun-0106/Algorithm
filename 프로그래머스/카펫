def solution(brown, yellow):
    answer = []
    # yellow의 가로 * 세로 순서쌍
    y_tuple = []
    
    if yellow==1:
        y_tuple = [(1,1)]
        
    for i in range(1, yellow+1):
        if yellow%i==0:
            y_tuple.append((i, yellow//i))
    

    y_tuple = y_tuple[len(y_tuple)//2:]
    y_tuple = sorted(y_tuple, key=lambda x:x[0])
    for i in y_tuple:
        # yellow 가로, 세로
        yw, yh = i
        
        # brown의 최소 가로, 세로
        w = yw+2
        h = yh+2
        
        min_brown = abs((w)*(h)-yellow) # 최소로 필요한 brown 갯수
        if brown==min_brown:
            return [w, h]
        elif brown>min_brown:
            extra = brown-min_brown
            if extra%w==0:
                h+=extra//w
                if w>=h:
                    return [w, h+extra//w]
            elif extra%h==0:
                w += extra//h
                if w>=h:
                    return [w, h]
