import sys
input = sys.stdin.readline

n, m = map(int, input().split())
INF = int(1e9)
graph = [[INF]*(n+1) for _ in range(n+1)]


for i in range(m):
    a, b = map(int, input().split())
    graph[a][b] = 1
    graph[b][a] = 1

for i in range(n):
    graph[i][i] = 0
    
# 플로이드 워셜 알고리즘
for k in range(1, n+1):
    for a in range(1, n+1):
        for b in range(1, n+1):
            if graph[a][k] and graph[k][n]:
                graph[a][b]  = min(graph[a][b], graph[a][k]+graph[k][b])
                
kevin = INF   
user = 0
for i in range(1, n+1):
    temp = 0
    for j in range(1, n+1):
        temp += graph[i][j]

    if kevin>temp:
        kevin = temp
        user = i

print(user)
